{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2025-01-10T12:19:41.262Z",
    "end": "2025-01-10T12:19:43.914Z",
    "duration": 2652,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1416e700-8798-49d1-9a63-547c8d9dd2d3",
      "title": "",
      "fullFile": "cypress/e2e/features/boards/card_tests.cy.ts",
      "file": "cypress/e2e/features/boards/card_tests.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c1402e0e-66ba-4045-bc7d-5c7da036fe70",
          "title": "Funcionalidade de Card",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "CT001 - Cenário - Criação de um novo Card no Board do Trello - Teste Positivo",
              "fullTitle": "Funcionalidade de Card CT001 - Cenário - Criação de um novo Card no Board do Trello - Teste Positivo",
              "timedOut": null,
              "duration": 704,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/features/boards/card_tests.cy.ts\"\n}",
              "code": "cy.create_a_card(list_id, nome_card, API_TOKEN, API_KEY)\n    .then(response => {\n    card_id = response.body.id;\n    const idLength = card_id.toString().length;\n    expect(response.status).to.equal(200);\n    expect(response.body.name).to.equal(nome_card);\n    expect(response.body.idList).to.equal(list_id);\n    expect(response.body.idBoard).to.equal(BOARD_ID);\n    expect(idLength).to.eq(24); // Validar se o id do board tem 24 caracteres.\n    // Validar o schema dos dados de retorno do endpoint.\n    expect(response.body).to.be.jsonSchema(_support_schemas_create_card__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n});",
              "err": {},
              "uuid": "cd5633e3-c0a3-4638-9605-155533795d75",
              "parentUUID": "c1402e0e-66ba-4045-bc7d-5c7da036fe70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CT002 - Cenário - Criação de um novo Card no Board com list_id inválido - Teste Negativo",
              "fullTitle": "Funcionalidade de Card CT002 - Cenário - Criação de um novo Card no Board com list_id inválido - Teste Negativo",
              "timedOut": null,
              "duration": 125,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/features/boards/card_tests.cy.ts\"\n}",
              "code": "cy.create_a_card(1, nome_card, API_TOKEN, API_KEY)\n    .then(response => {\n    expect(response.status).to.equal(400);\n    expect(response.body).to.equal(\"invalid value for idList\");\n});",
              "err": {},
              "uuid": "50359ec4-2dcc-45f3-bf79-ef0df49403d1",
              "parentUUID": "c1402e0e-66ba-4045-bc7d-5c7da036fe70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CT003 - Cenário - Consulta Card criado no Trello - Teste Positivo",
              "fullTitle": "Funcionalidade de Card CT003 - Cenário - Consulta Card criado no Trello - Teste Positivo",
              "timedOut": null,
              "duration": 168,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/features/boards/card_tests.cy.ts\"\n}",
              "code": "cy.get_card(card_id, API_TOKEN, API_KEY)\n    .then(response => {\n    expect(response.status).to.equal(200);\n    expect(response.body.name).to.equal(nome_card);\n    expect(response.body.id).to.eq(card_id); // Validar se o id do board tem 24 caracteres.\n    // Validar o schema dos dados de retorno do endpoint.\n    expect(response.body).to.be.jsonSchema(_support_schemas_get_card__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n});",
              "err": {},
              "uuid": "e929b67d-c98d-435a-882d-abcc4ffdf570",
              "parentUUID": "c1402e0e-66ba-4045-bc7d-5c7da036fe70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CT004 - Cenário - Consulta um Card criado no Trello com card_id invalido - Teste Negativo",
              "fullTitle": "Funcionalidade de Card CT004 - Cenário - Consulta um Card criado no Trello com card_id invalido - Teste Negativo",
              "timedOut": null,
              "duration": 103,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/features/boards/card_tests.cy.ts\"\n}",
              "code": "cy.get_card(0, API_TOKEN, API_KEY)\n    .then(response => {\n    expect(response.status).to.equal(400);\n    expect(response.body).to.equal(\"invalid id\");\n});",
              "err": {},
              "uuid": "ec72a9ca-b4e6-4ed0-9b4d-9f8b9b5b46ea",
              "parentUUID": "c1402e0e-66ba-4045-bc7d-5c7da036fe70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CT003 - Cenário - Criação de um novo Card no Board com API_TOKEN inválido - Teste Negativo",
              "fullTitle": "Funcionalidade de Card CT003 - Cenário - Criação de um novo Card no Board com API_TOKEN inválido - Teste Negativo",
              "timedOut": null,
              "duration": 98,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/features/boards/card_tests.cy.ts\"\n}",
              "code": "cy.create_a_card(list_id, nome_card, 12345, API_KEY)\n    .then(response => {\n    expect(response.status).to.equal(401);\n    expect(response.body).to.equal(\"invalid app token\");\n});",
              "err": {},
              "uuid": "ae81eff1-7c44-4072-8d0f-bff25bb8be67",
              "parentUUID": "c1402e0e-66ba-4045-bc7d-5c7da036fe70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CT004 - Cenário - Criação de um novo Card no Board com API_KEY inválido - Teste Negativo",
              "fullTitle": "Funcionalidade de Card CT004 - Cenário - Criação de um novo Card no Board com API_KEY inválido - Teste Negativo",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/features/boards/card_tests.cy.ts\"\n}",
              "code": "cy.create_a_card(list_id, nome_card, API_TOKEN, 12345)\n    .then(response => {\n    expect(response.status).to.equal(401);\n    expect(response.body).to.equal(\"invalid key\");\n});",
              "err": {},
              "uuid": "9f80873c-7a99-404b-bf50-3a67a635cb91",
              "parentUUID": "c1402e0e-66ba-4045-bc7d-5c7da036fe70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CT005 - Cenário - Exclusão de um Card no Board do Trello - Teste Positivo",
              "fullTitle": "Funcionalidade de Card CT005 - Cenário - Exclusão de um Card no Board do Trello - Teste Positivo",
              "timedOut": null,
              "duration": 604,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/features/boards/card_tests.cy.ts\"\n}",
              "code": "cy.open_boards();\ncy.delete_card(card_id, API_TOKEN, API_KEY)\n    .then(response => {\n    expect(response.status).to.equal(200);\n});",
              "err": {},
              "uuid": "cbb153a0-4be4-49e5-bdc2-2e789bc9fcda",
              "parentUUID": "c1402e0e-66ba-4045-bc7d-5c7da036fe70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CT006 - Cenário - Exclusão de um Card no Board com card_id inexistente - Teste Negativo",
              "fullTitle": "Funcionalidade de Card CT006 - Cenário - Exclusão de um Card no Board com card_id inexistente - Teste Negativo",
              "timedOut": null,
              "duration": 246,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/features/boards/card_tests.cy.ts\"\n}",
              "code": "cy.open_boards();\ncy.delete_card(1, API_TOKEN, API_KEY)\n    .then(response => {\n    expect(response.status).to.equal(400);\n    expect(response.body).to.equal(\"invalid id\");\n});",
              "err": {},
              "uuid": "949b7f6d-ffe3-4646-a95d-89eefeb7d188",
              "parentUUID": "c1402e0e-66ba-4045-bc7d-5c7da036fe70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CT007 - Cenário - Exclusão de um Card no Board com API_TOKEN inválido - Teste Negativo",
              "fullTitle": "Funcionalidade de Card CT007 - Cenário - Exclusão de um Card no Board com API_TOKEN inválido - Teste Negativo",
              "timedOut": null,
              "duration": 229,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/features/boards/card_tests.cy.ts\"\n}",
              "code": "cy.open_boards();\ncy.delete_card(1, 12345, API_KEY)\n    .then(response => {\n    expect(response.status).to.equal(401);\n    expect(response.body).to.equal(\"invalid app token\");\n});",
              "err": {},
              "uuid": "01230aae-cfde-4fe2-ac91-026339509d07",
              "parentUUID": "c1402e0e-66ba-4045-bc7d-5c7da036fe70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CT008 - Cenário - Exclusão de um Card no Board com API_KEY inválido - Teste Negativo",
              "fullTitle": "Funcionalidade de Card CT008 - Cenário - Exclusão de um Card no Board com API_KEY inválido - Teste Negativo",
              "timedOut": null,
              "duration": 222,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/features/boards/card_tests.cy.ts\"\n}",
              "code": "cy.open_boards();\ncy.delete_card(1, API_TOKEN, 123)\n    .then(response => {\n    expect(response.status).to.equal(401);\n    expect(response.body).to.equal(\"invalid key\");\n});",
              "err": {},
              "uuid": "79a9b015-4a72-4728-9641-50bd69ba228c",
              "parentUUID": "c1402e0e-66ba-4045-bc7d-5c7da036fe70",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cd5633e3-c0a3-4638-9605-155533795d75",
            "50359ec4-2dcc-45f3-bf79-ef0df49403d1",
            "e929b67d-c98d-435a-882d-abcc4ffdf570",
            "ec72a9ca-b4e6-4ed0-9b4d-9f8b9b5b46ea",
            "ae81eff1-7c44-4072-8d0f-bff25bb8be67",
            "9f80873c-7a99-404b-bf50-3a67a635cb91",
            "cbb153a0-4be4-49e5-bdc2-2e789bc9fcda",
            "949b7f6d-ffe3-4646-a95d-89eefeb7d188",
            "01230aae-cfde-4fe2-ac91-026339509d07",
            "79a9b015-4a72-4728-9641-50bd69ba228c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2615,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}